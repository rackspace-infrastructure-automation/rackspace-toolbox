version: 2
jobs:
  build_toolbox:
    working_directory: /rackspace-toolbox
    docker:
      - image: docker:18.06.1-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache py-pip
      - deploy:
          name: Build rackspace-toolbox containers
          command: |
            docker build -t rackautomation/rackspace-toolbox:$CIRCLE_SHA1 ./toolbox/
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push rackautomation/rackspace-toolbox:$CIRCLE_SHA1
            ./scripts/tag_release $CIRCLE_SHA1 "branch_${CIRCLE_BRANCH}"

  test_toolbox:
    docker:
      - image: rackautomation/rackspace-toolbox:$CIRCLE_SHA1
    environment:
      TF_STATE_BUCKET: test_harness
      TF_STATE_REGION: test_harness
    steps:
      - checkout
      - run:
          name: BATS
          command: |
            git clone --depth 1 https://github.com/bats-core/bats-core.git /tmp/bats
            /tmp/bats/install.sh /usr/local
            bats ./tests/
      - run:
          name: disable automatic resolution of changed layers
          command: mkdir test/workspace && ls test/layers/ > test/workspace/changed_layers
      - run:
          name: lint tests
          command: cd test && lint.sh
      - run:
          name: plan - Please test in a new PR for https://github.com/rackspace-infrastructure-automation/969282-aws-751845724670-Phoenix-Sandbox-Do-Not-Delete/
          command: 'cd test && plan.sh || echo "TODO: find a way to test plan and apply"'
      - run:
          name: apply - Please test in a new PR for https://github.com/rackspace-infrastructure-automation/969282-aws-751845724670-Phoenix-Sandbox-Do-Not-Delete/
          command: 'cd test && apply.sh || echo "TODO: find a way to test plan and apply"'
      - run:
          name: destroy
          command: cd test && destroy.sh || echo "TODO"

  tag_master:
    docker:
      - image: docker:18.06.1-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - deploy:
          name: tag as master
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            ./scripts/tag_release $CIRCLE_SHA1 master

  tag_release:
    docker:
      - image: docker:18.06.1-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - deploy:
          name: tag an official release
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            ./scripts/tag_release $CIRCLE_SHA1 $CIRCLE_TAG

workflows:
  version: 2
  toolbox:
    jobs:
      - build_toolbox
      - test_toolbox:
          requires:
            - build_toolbox
      - tag_master:
          requires:
            - test_toolbox
          filters:
            branches:
              only:
                - master
      - tag_release:
          filters:
            tags:
              only:
                - /^[0-9]\.[0-9]\.[0-9]+/
            branches:
              ignore: /.*/
